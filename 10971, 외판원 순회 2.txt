#include <iostream>
#include <algorithm>

int w[11][11];
int r[11];

int n;
int minValue;

int main() {
	scanf("%d", &n);
	for (int i = 1; i <= n; ++i) r[i] = i;
	
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= n; ++j) {
			int temp = 0;
			scanf("%d", &temp);
			w[i][j] = temp;
		}
	}

	minValue = 987987987;

	do {
		bool flag = true;
		int temp = 0;

		for (int i = 1; i <= n; ++i) {
			if (i != n) {
				if (w[r[i]][r[i + 1]] == 0) {
					flag = false;
					break;
				}
				else temp += w[r[i]][r[i + 1]];
			}
			else {
				if (w[r[n]][r[1]] == 0) {
					flag = false;
					break;
				}
				else temp += w[r[n]][r[1]];
			}
		}

		if(flag) 
			minValue = std::min(minValue, temp);

	} while (std::next_permutation(r + 1, r + n + 1));

	printf("%d\n", minValue);
	return 0;
}